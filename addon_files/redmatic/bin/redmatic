#!/bin/sh

CONF_DIR=/usr/local/etc/config
ADDON_DIR=/usr/local/addons/redmatic
WWW_DIR=/usr/local/etc/config/addons/www/redmatic

NODE=$ADDON_DIR/bin/node

SETTINGS=$ADDON_DIR/lib/settings.js
RED_DIR=$ADDON_DIR/lib/node_modules/node-red
RED=$RED_DIR/red.js

LIGHTTPD_CONF=/etc/lighttpd/lighttpd.conf
LIGHTTPD_SSL_CONF=/etc/lighttpd/lighttpd_ssl.conf
BACKUP_CGI=/www/config/cp_security.cgi

export PATH=$ADDON_DIR/bin:$PATH
export LD_LIBRARY_PATH=$ADDON_DIR/lib:$LD_LIBRARY_PATH
export GIT_EXEC_PATH=/usr/local/addons/redmatic/libexec/git-core
export NO_UPDATE_NOTIFIER=true

Stop () {
    PSPID=`ps -o pid,comm,args | awk '{if($3 == "node-red" || $4 ~ /node-red/){print $1}}'`
    if [ "$PSPID" != "" ]
    then
        echo -n "Stopping Node-RED: "
        killall redmaticLoader 2>/dev/null
        kill -SIGINT $PSPID 2>/dev/null
        if [ $? -ne "0" ]
        then
            sleep 3
            kill -KILL $PSPID 2>/dev/null
        fi
        echo "OK"
        logger -t redmatic -p daemon.info "Stopping Node-RED"
        return 0
    else
        echo "Node-RED not running"
        return 1
    fi
}

Start () {
    if [ -f $ADDON_DIR/var/do_pkg_upgrade ]; then
        $ADDON_DIR/bin/redmatic-pkg upgrade >> $ADDON_DIR/var/pkg-upgrade.log
    fi
    if ! grep -Fq "/etc/config/lighttpd/" $LIGHTTPD_CONF
    then
      echo "patching $LIGHTTPD_CONF"
      mount -o remount,rw /
      cp $LIGHTTPD_CONF $LIGHTTPD_CONF.orig
      echo "include_shell \"test -d /etc/config/lighttpd && cat /etc/config/lighttpd/*.conf\"" >> $LIGHTTPD_CONF
      mount -o remount,ro /
      /etc/init.d/S50lighttpd restart
    fi

    if [ -f $LIGHTTPD_SSL_CONF ]
    then
        if ! grep -Fq "/etc/config/lighttpd/" $LIGHTTPD_SSL_CONF
        then
          echo "patching $LIGHTTPD_SSL_CONF"
          mount -o remount,rw /
          cp $LIGHTTPD_SSL_CONF $LIGHTTPD_SSL_CONF.orig
          echo "include_shell \"test -d /etc/config/lighttpd && cat /etc/config/lighttpd/*.conf\"" >> $LIGHTTPD_SSL_CONF
          mount -o remount,ro /
          /etc/init.d/S50lighttpd restart
        fi
    fi

    if ! grep -Fq "exclude-tag=.nobackup" $BACKUP_CGI
    then
      echo "patching $BACKUP_CGI"
      mount -o remount,rw /
      cp $BACKUP_CGI $BACKUP_CGI.orig
      sed "s/exec tar czf \/tmp\/usr_local.tar.gz usr\/local/exec tar --exclude-tag=.nobackup -czf \/tmp\/usr_local.tar.gz usr\/local/" $BACKUP_CGI > $BACKUP_CGI.tmp && mv $BACKUP_CGI.tmp $BACKUP_CGI
      chmod 755 $BACKUP_CGI
      mount -o remount,ro /
    fi

    PSPID=`ps -o pid,comm,args | awk '{if($3 == "node-red" || $4 ~ /node-red/){print $1}}'`
    if [ "$PSPID" != "" ]
    then
        echo "Node-RED already running"
        exit 1
    else
        echo -n "Starting Node-RED: "
        source $ADDON_DIR/versions
        logger -t redmatic -p daemon.info "RedMatic v$VERSION_ADDON (c) Sebastian Raff https://github.com/rdmtc/RedMatic"
        start-stop-daemon -S -q -b --exec $ADDON_DIR/bin/redmaticLoader
        echo "OK"
    fi
}

case "$1" in

  stop)
    Stop || exit 1
  ;;

  start)
    Start
  ;;

  restart)
    Stop
    sleep 3
    Start
  ;;

  info)
    source $ADDON_DIR/versions
    echo "Info: <div><a target=\"_blank\" href=\"https://github.com/rdmtc/RedMatic\"><img src=\"/addons/redmatic/logo-x-120.png\"/></a></div>"
    echo "Name: RedMatic"
    echo "Version: $VERSION_ADDON"
    echo "Update: /addons/redmatic/update_check.cgi"
    echo "Config-Url: /addons/redmatic/settings.cgi"
    echo "Operations: restart uninstall"
  ;;

  uninstall)
    Stop

    $ADDON_DIR/bin/update_addon redmatic
    rm -r $ADDON_DIR
    rm -r $WWW_DIR
    rm $CONF_DIR/lighttpd/redmatic.conf
    rm $CONF_DIR/rc.d/redmatic

    mount -o remount,rw /
    if [ -f $LIGHTTPD_CONF.orig ]
    then
        mv $LIGHTTPD_CONF.orig $LIGHTTPD_CONF
    fi
    if [ -f $LIGHTTPD_SSL_CONF.orig ]
    then
        mv $LIGHTTPD_SSL_CONF.orig $LIGHTTPD_SSL_CONF
    fi
    if [ -f $BACKUP_CGI.orig ]
    then
        mv $BACKUP_CGI.orig $BACKUP_CGI
    fi
    mount -o remount,ro /

    logger -t redmatic -p daemon.info "Uninstalled RedMatic"
    ;;

  *)
    echo "Usage: node-red {start|stop|restart|info|uninstall}" >&2
    exit 1
  ;;

esac

exit 0
