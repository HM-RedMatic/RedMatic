#!/bin/sh

CONF_DIR=/usr/local/etc/config
ADDON_DIR=/usr/local/addons/redmatic
WWW_DIR=/usr/local/etc/config/addons/www/redmatic

NODE=$ADDON_DIR/bin/node

export PATH=$ADDON_DIR/bin:$PATH
export LD_LIBRARY_PATH=$ADDON_DIR/lib:$LD_LIBRARY_PATH
export HOME=$ADDON_DIR/home

export NO_UPDATE_NOTIFIER=true

RED_DIR=$ADDON_DIR/lib/node_modules/node-red
RED=$RED_DIR/red.js

SETTINGS=$ADDON_DIR/lib/settings.js

status=1
restarts=0
limit=`jq '.restartOnCrash' $ADDON_DIR/etc/settings.json`

if [[ -z $limit ]]; then
  limit = 0
fi

while [[ $status != 0 ]]; do
  echo $restarts > $ADDON_DIR/var/restart_count
  if [[ $restarts -gt 0 ]]; then
    echo "Restarting Node-RED ($restarts/$limit)" | logger -p daemon.warn -t redmatic
  else
    echo "Starting Node-RED" | logger -p daemon.info -t redmatic
  fi
  if [[ -f $ADDON_DIR/var/safe_mode ]]; then
    SAFE="--safe"
    rm $ADDON_DIR/var/safe_mode
  fi
  set -o pipefail
  $NODE $RED $SAFE -s $SETTINGS 2>&1 | logger -p daemon.err -t node-red
  status=$?
  if [[ $status != 0 ]]; then
    echo "Node-RED exited with non-zero exit status $status" | logger -p daemon.err -t node-red
    let "restarts=restarts+1"
    if [[ $restarts -gt $limit ]]; then
        if [[ $limit -gt 0 ]]; then
            echo "Maximum Node-RED restarts exceeded" | logger -p daemon.err -t redmatic
        fi
        status=0
    fi
  fi
done
